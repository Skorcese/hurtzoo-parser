{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\skorz\\\\OneDrive\\\\Pulpit\\\\DevStuff\\\\Bushido\\\\hurtzoo-parser\\\\hurtzoo-parser\\\\packages\\\\data-display\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport Fetch from 'isomorphic-unfetch';\nimport React from 'react';\nimport { useTable, useSortBy } from 'react-table';\n\nconst Root = ({\n  products\n}) => {\n  const columns = [{\n    Header: 'ID',\n    accessor: 'id'\n  }, {\n    Header: 'Service',\n    accessor: 'service'\n  }, {\n    Header: 'Producer',\n    accessor: 'producer'\n  }, {\n    Header: 'Name',\n    accessor: 'name'\n  }, {\n    Header: 'EAN',\n    accessor: 'ean'\n  }, {\n    Header: 'Price',\n    accessor: 'price'\n  }, {\n    Header: 'CeneoPrice',\n    accessor: 'ceneoPrice'\n  }];\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }, useSortBy);\n  return __jsx(React.Fragment, null, __jsx(\"table\", _extends({}, getTableProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), __jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, headerGroups.map(headerGroup => __jsx(\"tr\", _extends({}, headerGroups.getHeaderGroupProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), headerGroup.headers.map(column => __jsx(\"th\", _extends({}, column.getHeaderProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), column.render('Header')))))), __jsx(\"tbody\", _extends({}, getTableBodyProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), rows.map((row, i) => {\n    prepareRow(row);\n    return __jsx(\"tr\", _extends({}, row.getRowProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }), row.cells.map(cell => __jsx(\"td\", _extends({}, cell.getCellProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }), cell.render('Cell'))));\n  }))));\n};\n\nRoot.getInitialProps = async () => {\n  const res = await Fetch('http://localhost:1000');\n  const jsonData = await res.json();\n  console.log(jsonData);\n  return {\n    products: jsonData\n  };\n};\n\nexport default Root;","map":{"version":3,"sources":["C:/Users/skorz/OneDrive/Pulpit/DevStuff/Bushido/hurtzoo-parser/hurtzoo-parser/packages/data-display/pages/index.js"],"names":["Fetch","React","useTable","useSortBy","Root","products","columns","Header","accessor","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","data","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","getInitialProps","res","jsonData","json","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,aAApC;;AACA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC7B,QAAMC,OAAO,GAAG,CACd;AACEC,IAAAA,MAAM,EAAE,IADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GADc,EAKd;AACED,IAAAA,MAAM,EAAE,SADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GALc,EASd;AACED,IAAAA,MAAM,EAAE,UADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GATc,EAad;AACED,IAAAA,MAAM,EAAE,MADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GAbc,EAiBd;AACED,IAAAA,MAAM,EAAE,KADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GAjBc,EAqBd;AACED,IAAAA,MAAM,EAAE,OADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GArBc,EAyBd;AACED,IAAAA,MAAM,EAAE,YADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GAzBc,CAAhB;AA+BA,QAAM;AACJC,IAAAA,aADI;AAEJC,IAAAA,iBAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,IAJI;AAKJC,IAAAA;AALI,MAMFX,QAAQ,CACV;AACEI,IAAAA,OADF;AAEEQ,IAAAA;AAFF,GADU,EAKVX,SALU,CANZ;AAcA,SACE,4BACE,4BAAWM,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,YAAY,CAACI,GAAb,CAAkBC,WAAD,IAChB,yBAAQL,YAAY,CAACM,mBAAb,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAyBI,MAAD,IACvB,yBAAQA,MAAM,CAACC,cAAP,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAkCD,MAAM,CAACE,MAAP,CAAc,QAAd,CAAlC,CADD,CADH,CADD,CADH,CADF,EAUE,4BAAWX,iBAAiB,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGE,IAAI,CAACG,GAAL,CAAS,CAACO,GAAD,EAAMC,CAAN,KAAY;AACpBV,IAAAA,UAAU,CAACS,GAAD,CAAV;AACA,WACE,yBAAQA,GAAG,CAACE,WAAJ,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACGF,GAAG,CAACG,KAAJ,CAAUV,GAAV,CAAeW,IAAD,IACb,yBAAQA,IAAI,CAACC,YAAL,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA8BD,IAAI,CAACL,MAAL,CAAY,MAAZ,CAA9B,CADD,CADH,CADF;AAOD,GATA,CADH,CAVF,CADF,CADF;AA2BD,CAzED;;AA2EAjB,IAAI,CAACwB,eAAL,GAAuB,YAAY;AACjC,QAAMC,GAAG,GAAG,MAAM7B,KAAK,CAAC,uBAAD,CAAvB;AACA,QAAM8B,QAAQ,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAvB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEA,SAAO;AACLzB,IAAAA,QAAQ,EAAEyB;AADL,GAAP;AAGD,CATD;;AAWA,eAAe1B,IAAf","sourcesContent":["import Fetch from 'isomorphic-unfetch';\r\nimport React from 'react';\r\nimport { useTable, useSortBy } from 'react-table';\r\nconst Root = ({ products }) => {\r\n  const columns = [\r\n    {\r\n      Header: 'ID',\r\n      accessor: 'id',\r\n    },\r\n    {\r\n      Header: 'Service',\r\n      accessor: 'service',\r\n    },\r\n    {\r\n      Header: 'Producer',\r\n      accessor: 'producer',\r\n    },\r\n    {\r\n      Header: 'Name',\r\n      accessor: 'name',\r\n    },\r\n    {\r\n      Header: 'EAN',\r\n      accessor: 'ean',\r\n    },\r\n    {\r\n      Header: 'Price',\r\n      accessor: 'price',\r\n    },\r\n    {\r\n      Header: 'CeneoPrice',\r\n      accessor: 'ceneoPrice',\r\n    },\r\n  ];\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n    },\r\n    useSortBy,\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroups.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => (\r\n                  <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                ))}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nRoot.getInitialProps = async () => {\r\n  const res = await Fetch('http://localhost:1000');\r\n  const jsonData = await res.json();\r\n\r\n  console.log(jsonData);\r\n\r\n  return {\r\n    products: jsonData,\r\n  };\r\n};\r\n\r\nexport default Root;\r\n"]},"metadata":{},"sourceType":"module"}